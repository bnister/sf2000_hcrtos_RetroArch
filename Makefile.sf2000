ROOT_DIR                  := .
DEPS_DIR                  := $(ROOT_DIR)/deps
DEBUG                     ?= 0
HAVE_LOGGER                = 0
HAVE_FILE_LOGGER           = 0
HAVE_CC_RESAMPLER          = 1
WHOLE_ARCHIVE_LINK         = 0
BIG_STACK                  = 1
HAVE_NETWORKING            = 0
HAVE_IFINFO                = 1
PC_DEVELOPMENT_IP_ADDRESS  = 255.255.255.255
PC_DEVELOPMENT_UDP_PORT    = 3490
RARCH_CONSOLE              = 0
USBGECKO                   = 0
HAVE_STATIC_DUMMY = 1

SPACE      :=
SPACE      := $(SPACE) $(SPACE)
BACKSLASH  :=
BACKSLASH  := \$(BACKSLASH)
filter_out1 = $(filter-out $(firstword $1),$1)
filter_out2 = $(call filter_out1,$(call filter_out1,$1))

# Note: We are using SF2000_CFLAGS here, instead of CFLAGS, due to that beeing passed in via cmd from the SDK, which makes it immutable
SF2000_CFLAGS :=

# system platform
system_platform = unix
ifeq ($(shell uname -s),)
   EXE_EXT = .exe
   system_platform = win
else ifneq ($(findstring Darwin,$(shell uname -s)),)
   system_platform = osx
else ifneq ($(findstring MINGW,$(shell uname -s)),)
   system_platform = win
endif

TARGET_NAME        := retroarch

INCLUDE            :=
LDFLAGS            :=
LIBDIRS            :=

ifeq ($(LIBRETRO), nxengine)
   WHOLE_ARCHIVE_LINK = 1
endif

ifeq ($(WHOLE_ARCHIVE_LINK), 1)
   WHOLE_START     := -Wl,--whole-archive
   WHOLE_END       := -Wl,--no-whole-archive
endif

LIB_CORE :=

ifeq ($(HAVE_STATIC_DUMMY),1)
  DEFINES += -DHAVE_STATIC_DUMMY
else
  LIB_CORE += -lretro_wii
endif

LIBS               := $(WHOLE_START) $(LIB_CORE) $(WHOLE_END)

libogc_platform    := 1

EXTERNAL_LIBOGC   ?= 0
GX_PTHREAD_LEGACY ?= 1

INCLUDE += -I.

#ifeq ($(EXTERNAL_LIBOGC), 1)
#   SF2000_CFLAGS   += -DEXTERNAL_LIBOGC
#   CXXFLAGS += -DEXTERNAL_LIBOGC
#   LIBDIRS += -L$(DEVKITPRO)/libogc/lib/wii
#   INCLUDE +=  -I$(DEVKITPRO)/libogc/include
#else
#   SF2000_CFLAGS   += -DINTERNAL_LIBOGC
#   CXXFLAGS += -DINTERNAL_LIBOGC
#   LIBDIRS += -Lwii/libogc/libs/wii
#   INCLUDE += -Iwii/libogc/include
#endif

ifeq ($(GX_PTHREAD_LEGACY), 1)
   SF2000_CFLAGS   += -DGX_PTHREAD_LEGACY
   CXXFLAGS += -DGX_PTHREAD_LEGACY
endif

MACHDEP := -DHW_RVL -mrvl

LIBDIRS += -L.

LDFLAGS += $(MACHDEP) -Wl,-Map,$(notdir $(EXT_INTER_TARGET)).map,-wrap,malloc,-wrap,free,-wrap,memalign,-wrap,calloc,-wrap,realloc,-wrap,strdup,-wrap,strndup,-wrap,malloc_usable_size

ifeq ($(BIG_STACK), 1)
   LDFLAGS += -T bootstrap/gx/rvl.ld
endif

#ifeq ($(EXTERNAL_LIBOGC), 1)
   LIBS += -lfat
#endif

LIBS += -lwiiuse -lbte

ifeq ($(USBGECKO), 1)
  LIBS += -ldb
endif
 
ifeq ($(HAVE_LOGGER), 1)
  LIBS += -lbba
endif

LIBS += -logc

HAVE_RUNAHEAD            := 1
HAVE_DSP_FILTER          := 1
HAVE_VIDEO_FILTER        := 1
HAVE_FILTERS_BUILTIN     := 1
HAVE_THREADS             := 1
HAVE_RPNG                := 1
HAVE_RJPEG               := 1
HAVE_RBMP                := 1
HAVE_RTGA                := 1
HAVE_IBXM                := 1
HAVE_OVERLAY             := 1
HAVE_ZLIB                := 1
HAVE_7ZIP                := 0
HAVE_CONFIGFILE          := 1
HAVE_PATCH               := 1
HAVE_CHEATS              := 1
HAVE_SCREENSHOTS         := 1
HAVE_REWIND              := 1
HAVE_AUDIOMIXER          := 1
HAVE_RWAV                := 1
RARCH_CONSOLE             = 1
HAVE_CHEATS              := 1
HAVE_CORE_INFO_CACHE     := 1
HAVE_MENU_COMMON         := 1
HAVE_MENU                := 1
HAVE_BUILTINZLIB         := 0
HAVE_STATIC_AUDIO_FILTERS := 1
HAVE_STATIC_VIDEO_FILTERS := 1

#HAVE_LANGEXTRA          := 1
HAVE_WIIUSB_HID          := 0
HAVE_HID                 := 0
HAVE_RARCH_EXEC          := 1
HAVE_RSOUND              := 0
HAVE_XMB                 := 0
HAVE_OZONE               := 0
HAVE_RGUI                := 1
HAVE_MATERIALUI          := 0

HAVE_ALSA                := 0
HAVE_WASAPI              := 0
HAVE_MMDEVAPI            := 0

SF2000_CFLAGS      += -DHAVE_SOCKET_LEGACY -DHAVE_MAIN

APP_BOOTER_DIR = wii/app_booter
#PLATOBJS := $(APP_BOOTER_DIR)/app_booter.binobj

ifeq ($(USBGECKO), 1)
   SF2000_CFLAGS += -DUSBGECKO
endif

INCLUDE += -I./libretro-common/include \
           -Ideps \
           -Ideps/stb
SF2000_CFLAGS += $(PLATCFLAGS) $(INCLUDE)

OBJ =  $(PLATOBJS)
OBJ += audio/drivers/sf2000_audio.o gfx/drivers/sf2000_gfx.o input/drivers_joypad/sf2000_joypad.o input/drivers/sf2000_input.o frontend/drivers/platform_sf2000.o

include $(PROJECTOR_DIR)/RetroArch/Makefile.common

SF2000_CFLAGS += $(DEFINES)


ifeq ($(WANT_GLSLANG), 1)
	OBJ += griffin/griffin_glslang.o
endif

ifeq ($(HAVE_LOGGER), 1)
   SF2000_CFLAGS      += -DHAVE_LOGGER
   SF2000_CFLAGS      += -DPC_DEVELOPMENT_IP_ADDRESS=\"$(PC_DEVELOPMENT_IP_ADDRESS)\" -DPC_DEVELOPMENT_UDP_PORT=$(PC_DEVELOPMENT_UDP_PORT)
endif

ifeq ($(HAVE_KERNEL_PRX), 1)
   SF2000_CFLAGS      += -DHAVE_KERNEL_PRX
endif

ifeq ($(HAVE_WIIUSB_HID), 1)
   SF2000_CFLAGS      += -DHAVE_WIIUSB_HID
endif

ifeq ($(BIG_STACK),1)
   SF2000_CFLAGS      += -DBIG_STACK
endif

ifeq ($(HAVE_FILE_LOGGER), 1)
   SF2000_CFLAGS      += -DHAVE_FILE_LOGGER
endif

ifeq ($(HAVE_RARCH_EXEC), 1)
   SF2000_CFLAGS      += -DHAVE_RARCH_EXEC
endif

ifeq ($(HAVE_ZLIB), 1)
   SF2000_CFLAGS      += -DHAVE_ZLIB
   SF2000_CFLAGS      += -I./libretro-common/include/compat/zlib
endif

ifeq ($(RARCH_CONSOLE), 1)
   SF2000_CFLAGS += -DRARCH_CONSOLE
endif

ifeq ($(RARCH_MOBILE), 1)
   SF2000_CFLAGS += -DRARCH_MOBILE
endif

SF2000_CFLAGS += -std=gnu99 -DHAVE_RGUI -DHAVE_MENU -DHAVE_GRIFFIN=1 -Wno-char-subscripts -DRARCH_INTERNAL

ifeq ($(HAVE_FILTERS_BUILTIN), 1)
   SF2000_CFLAGS += -DHAVE_FILTERS_BUILTIN
endif

ifeq ($(HAVE_RSOUND), 1)
   SF2000_CFLAGS += -DHAVE_RSOUND
endif

ifeq ($(HAVE_GETOPT_LONG), 1)
   SF2000_CFLAGS += -DHAVE_GETOPT_LONG=1
endif

ifeq ($(HAVE_NETWORK_CMD), 1)
   SF2000_CFLAGS += -DHAVE_NETWORK_CMD
endif

ifeq ($(HAVE_DYNAMIC), 1)
   SF2000_CFLAGS += -DHAVE_DYNAMIC
endif

ifeq ($(DEBUG), 1)
   SF2000_CFLAGS += -O0 -g -DDEBUG
else
   SF2000_CFLAGS += -O3
endif

SF2000_CFLAGS += -DSF2000 -DHAVE_REWIND -DHAVE_SCREENSHOTS

INCLUDE := $(subst -I,-I$(PROJECTOR_DIR)/RetroArch/, $(INCLUDE))
CSRCS += $(patsubst %.o, $(PROJECTOR_DIR)/RetroArch/%.c, $(OBJ))